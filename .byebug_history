exit
c
exit
c
exit
mg_client.send_message 'mg.doublegeek.co', message_params
next
exit
c
exit
c
exit
c
exit
c
exit
message_params
message_params[
next
exit
addr.email
c
next
Process.kill(0, @pid) != 1
@pid
next
c
File.exists?(File.expand_path('tmp/crawl.pid'))
exit
File.expand_path('tmp/bot.pid')
exit
c
exit
response.body
exit
c
pc
c
response.body
exit
body
urls
next
c
next
page
href
next
page
next
c
urls
next
c
exit
c
exit
require 'cobweb'
Rails::API
end
  end
    puts "asdad"
    byebug
  page do |p|
  path "/remote-jobs/"
  base_url "https://remote.co"
Wombat.crawl do
  page do
  path "remote-jobs/"
    heading 'css=h1'
  the_company 'xpath=//ul[@class="footer_nav"][1]//a', :follow do
  path "/"
  base_url "https://www.github.com"
require_relative 'data'
require "byebug"
require 'wombat'
require 'uri'
Operator.where(email: 'op1@eroslabs.co').last.operator_logins.last
Operator.where(email: 'op1@eroslabs.co').last.operator_logins.count
Operator.where(email: 'op1@eroslabs.co').last.operator_logins
Operator.where(email: 'op1@eroslabs.co').last
Operator.where(email: 'op1@eroslabs.co')
Operator.all.map(&:email)
Operator.all.map(7:email)
Operator.where(email: 'vipin@eroslabs.co')
Operator.where(phone: '9718240945')
Operator.where(op_number: '9718240945')
    puts dest
  spider.every_link do |origin,dest|
Spidr.site('http://bluenation.co/') do |spider|
url_map = Hash.new { |hash,key| hash[key] = [] }
url_map
    url_map[dest] << origin
require 'spidr'
require 'byebug'
    puts page.title
  spider.every_html_page do |page|
Spidr.site('https://www.producthunt.com/') do |spider|
require 'spidrg'
    end
      puts "  #{name} = #{value}"
      value = meta.attributes['content']
      name = (meta.attributes['name'] || meta.attributes['http-equiv'])
    page.search('//meta').each do |meta|
    puts ">>> #{page.url}"
  spider.every_page do |page|
Spidr.site('https://www.producthunt.com/posts/world-emoji-awards-2017') do |spider|
  spider.every_url { |url| puts url }
DoctorPayout.lasy
DoctorPayout
DoctorPayoiut
Doctor.last.attributes.keys.sort
Doctor.last.keys.sort
Doctor
Doctor.last
doctor
acct.like_by_location
acct.insta_login
browser = acct.mbrowser
Account.init_insta(acct.username)
acct = Account.last
reload!
window.scrollBy(0,document.body.scrollHeight -  Math.floor(Math.random()*((document.body.scrollHeight -600 )-100+1)+100));)
browser.close
browser.close()
acct.capture_ajax_requests
nav.length
nav = browser.elements(xpath: '//nav')
browse.close
ialog_box.click
dialog_box.click
ialog_box.exists?
ialog_box = browser.element(css: '._a1rcs')
%w(--user-data-dir=/Users/eros/socialhit/insta_browser_data#{folder_name} --ignore-certificate-errors --disable-popup-blocking --disable-translate --lang=en-US --no-sandbox --dns-prefetch-disable)
Account.init_insta
xit
 HTTParty.post("https://sandbox-api.getsimpl.com/api/v1.1/transactions", body: data.to_json, headers: {"Content-Type" => "application/json", "Authorization" => "da43271ac4eae0f9cb712a5d6fba12ee"})
data = {:transaction_token=>"662a38845e9a8997c6230d41df45bf12", :amount_in_paise=>10000, :order_id=>"c676a663-617e-4535-92d8-f09c3124ef98", :items=>[{:sku=>"123123123", :quantity=>2, :unit_price_in_paise=>10000, :display_name=>"apples"}, {:sku=>"123123124", :quantity=>1, :unit_price_in_paise=>10000, :display_name=>"oranges"}], :shipping_address=>{:line1=>"Shipping line1", :line2=>"Shipping line2", :city=>"Mumbai", :state=>"Maharastra", :pincode=>"400072"}, :billing_address=>{:line1=>"Shipping line1", :line2=>"Shipping line2", :city=>"Mumbai", :state=>"Maharastra", :pincode=>"400072"}, :shipping_amount_in_paise=>1000, :discount_in_paise=>0, :metadata=>[{:key1=>"value"}, {:key1=>"value"}]}
Operator.last
sleep(rand(1..4))
nav.element(:css, '._q8rex a').driver.execute_script('click();')
nav.element(:css, '._q8rex a').driver
nav.element(:css, '._q8rex a').click
nav.element(:css, '._q8rex a').exists?
nav = browser.element(:tag_name => 'nav', index: 0)
nav.element(:css, '._q8rex a').exists
nav.element(:css, '._o1o4h ._q8rex a span').click
nav.element(:css, '._o1o4h ._q8rex a').click
nav.element(:css, '._o1o4h ._q8rex a').exists?
nav.element(:css, '._o1o4h ._q8rex a')
location.search_term
